version: '3.3'

services:
  swarm-discovery-server:
    image: jmendiara/prometheus-swarm-discovery
    ports:
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
          - node.role == manager

  swarm-discovery-client:
    image: jmendiara/prometheus-swarm-discovery
    command: 
      - client
      - -i=5
      - -s=http://swarm-discovery-server:8080
      - -o=/swarm-endpoints/swarm-endpoints.json
      - -p=pro_prometheus
    volumes:
      - swarm-endpoints:/swarm-endpoints/
    deploy:
      labels:
        prometheus.enable: "true"
        prometheus.port: "9090" # optional (defaults to prometheus defaults := "80")
        prometheus.path: "/metrics" # optional (defaults to prometheus defaults := "/metrics")
      placement:
        constraints:
          - node.role == manager

  prometheus:
    image: prom/prometheus:v1.8.2
    ports:
      - '9090:9090'
    volumes:
      - swarm-endpoints:/etc/swarm-endpoints/
    command: 
      - -storage.local.retention=2h
      - -storage.local.memory-chunks=1048576
      - -config.file=/etc/prometheus/prometheus.yaml
    deploy:
      labels:
        prometheus.enable: "true"
        prometheus.port: "9090" # optional (defaults to prometheus defaults := "80")
        prometheus.path: "/metrics" # optional (defaults to prometheus defaults := "/metrics")
    configs:
      - source: prometheus
        target: /etc/prometheus/prometheus.yaml
  
volumes:
  swarm-endpoints:

configs: 
  prometheus:
    file: ./prometheus-configs/prometheus.yaml
